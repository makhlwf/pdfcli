name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: ✅ Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run unit tests
        run: python -m unittest discover tests

  build-linux:
    name: 🐧 Build for Linux
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --name pdfcli pdfcli/main.py
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdfcli-linux
          path: dist/pdfcli

  build-windows:
    name: 🪟 Build for Windows
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --name pdfcli pdfcli/main.py
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdfcli-windows
          path: dist/pdfcli.exe

  build-macos:
    name: 🍎 Build for macOS
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --name pdfcli pdfcli/main.py
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdfcli-macos
          path: dist/pdfcli

  tag:
    name: 🏷️ Create Version Tag
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract Version from setup.py
        id: get_version
        run: |
          VERSION=$(python -c "import re; f = open('setup.py').read(); print(re.search(r'version=[\"\\'](.+?)[\"\\']', f).group(1))")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Set Tag Name
        id: set_tag
        run: |
          TAG=v${{ steps.get_version.outputs.VERSION }}
          echo "Using tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Create and Push Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.set_tag.outputs.tag }}
          git push origin ${{ steps.set_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: 🚀 Create GitHub Release
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          release_name: Release ${{ needs.tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/pdfcli-linux/pdfcli
          asset_name: pdfcli-linux
          asset_content_type: application/octet-stream
      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/pdfcli-windows/pdfcli.exe
          asset_name: pdfcli-windows.exe
          asset_content_type: application/octet-stream
      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/pdfcli-macos/pdfcli
          asset_name: pdfcli-macos
          asset_content_type: application/octet-stream